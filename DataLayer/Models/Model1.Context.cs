//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ads_Detail> Ads_Detail { get; set; }
        public virtual DbSet<Ads_PageName> Ads_PageName { get; set; }
        public virtual DbSet<Ads_Placement> Ads_Placement { get; set; }
        public virtual DbSet<Attributes_Setup> Attributes_Setup { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<category_master> category_master { get; set; }
        public virtual DbSet<Category_One> Category_One { get; set; }
        public virtual DbSet<Category_Three> Category_Three { get; set; }
        public virtual DbSet<Category_Two> Category_Two { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<Customer_Wishlist> Customer_Wishlist { get; set; }
        public virtual DbSet<MainPageCategory> MainPageCategories { get; set; }
        public virtual DbSet<NewsLetter> NewsLetters { get; set; }
        public virtual DbSet<Order_Detail> Order_Detail { get; set; }
        public virtual DbSet<PageCategory> PageCategories { get; set; }
        public virtual DbSet<PageCategoryDetail> PageCategoryDetails { get; set; }
        public virtual DbSet<Product_Attribute> Product_Attribute { get; set; }
        public virtual DbSet<Product_Basic> Product_Basic { get; set; }
        public virtual DbSet<Product_Brands> Product_Brands { get; set; }
        public virtual DbSet<Product_Category> Product_Category { get; set; }
        public virtual DbSet<Product_Images> Product_Images { get; set; }
        public virtual DbSet<Product_Price> Product_Price { get; set; }
        public virtual DbSet<Product_SEO> Product_SEO { get; set; }
        public virtual DbSet<Product_Specification> Product_Specification { get; set; }
        public virtual DbSet<Product_Status> Product_Status { get; set; }
        public virtual DbSet<Product_Tags> Product_Tags { get; set; }
        public virtual DbSet<Review> Reviews { get; set; }
        public virtual DbSet<SocialMedia> SocialMedias { get; set; }
        public virtual DbSet<Specification_Setup> Specification_Setup { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<UserActivation> UserActivations { get; set; }
        public virtual DbSet<Users_Profile> Users_Profile { get; set; }
        public virtual DbSet<Product_Discount> Product_Discount { get; set; }
        public virtual DbSet<Website_Setup> Website_Setup { get; set; }
        public virtual DbSet<Logo> Logoes { get; set; }
        public virtual DbSet<Order_Master> Order_Master { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Order_Basic> Order_Basic { get; set; }
        public virtual DbSet<Donation_Master> Donation_Master { get; set; }
        public virtual DbSet<Donation_Received> Donation_Received { get; set; }
        public virtual DbSet<Users_Membership> Users_Membership { get; set; }
        public virtual DbSet<Order_Disbursement> Order_Disbursement { get; set; }
        public virtual DbSet<Order_Status> Order_Status { get; set; }
        public virtual DbSet<Order_Variation> Order_Variation { get; set; }
        public virtual DbSet<Vendor_Membership_Package> Vendor_Membership_Package { get; set; }
        public virtual DbSet<Order_Shipping> Order_Shipping { get; set; }
        public virtual DbSet<Product_Recently_Viewed> Product_Recently_Viewed { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Product_Inventory> Product_Inventory { get; set; }
        public virtual DbSet<Website_Setup_Script> Website_Setup_Script { get; set; }
        public virtual DbSet<Email_Setup> Email_Setup { get; set; }
        public virtual DbSet<organization> organizations { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
    
        [DbFunction("Entities", "f_topcat")]
        public virtual IQueryable<f_topcat_Result> f_topcat(Nullable<int> catId)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_topcat_Result>("[Entities].[f_topcat](@CatId)", catIdParameter);
        }
    
        [DbFunction("Entities", "getcat")]
        public virtual IQueryable<getcat_Result> getcat(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getcat_Result>("[Entities].[getcat](@ID)", iDParameter);
        }
    
        public virtual ObjectResult<sp_getcat_Result> sp_getcat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getcat_Result>("sp_getcat");
        }
    
        [DbFunction("Entities", "f_Profile_All")]
        public virtual IQueryable<f_Profile_All_Result> f_Profile_All(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_Profile_All_Result>("[Entities].[f_Profile_All](@Type)", typeParameter);
        }
    
        [DbFunction("Entities", "f_startrating_productwise")]
        public virtual IQueryable<f_startrating_productwise_Result> f_startrating_productwise(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_startrating_productwise_Result>("[Entities].[f_startrating_productwise](@Id)", idParameter);
        }
    
        [DbFunction("Entities", "f_Donation_BYID")]
        public virtual IQueryable<f_Donation_BYID_Result> f_Donation_BYID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_Donation_BYID_Result>("[Entities].[f_Donation_BYID]()");
        }
    
        [DbFunction("Entities", "f_donation_total")]
        public virtual IQueryable<f_donation_total_Result> f_donation_total()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_donation_total_Result>("[Entities].[f_donation_total]()");
        }
    
        [DbFunction("Entities", "f_Orders_All")]
        public virtual IQueryable<f_Orders_All_Result> f_Orders_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_Orders_All_Result>("[Entities].[f_Orders_All]()");
        }
    
        [DbFunction("Entities", "f_All_getcat")]
        public virtual IQueryable<f_All_getcat_Result> f_All_getcat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_All_getcat_Result>("[Entities].[f_All_getcat]()");
        }
    
        [DbFunction("Entities", "f_disbursement")]
        public virtual IQueryable<f_disbursement_Result> f_disbursement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_disbursement_Result>("[Entities].[f_disbursement]()");
        }
    
        [DbFunction("Entities", "f_disbursement_summary")]
        public virtual IQueryable<f_disbursement_summary_Result> f_disbursement_summary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_disbursement_summary_Result>("[Entities].[f_disbursement_summary]()");
        }
    
        [DbFunction("Entities", "f_order_master_summary")]
        public virtual IQueryable<f_order_master_summary_Result> f_order_master_summary(Nullable<System.Guid> orderGUID)
        {
            var orderGUIDParameter = orderGUID.HasValue ?
                new ObjectParameter("OrderGUID", orderGUID) :
                new ObjectParameter("OrderGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_order_master_summary_Result>("[Entities].[f_order_master_summary](@OrderGUID)", orderGUIDParameter);
        }
    
        [DbFunction("Entities", "f_order_master")]
        public virtual IQueryable<f_order_master_Result> f_order_master()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_order_master_Result>("[Entities].[f_order_master]()");
        }
    
        [DbFunction("Entities", "f_getproducts")]
        public virtual IQueryable<f_getproducts_Result> f_getproducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_getproducts_Result>("[Entities].[f_getproducts]()");
        }
    
        public virtual int SP_AllMessages(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AllMessages", userNameParameter);
        }
    
        [DbFunction("Entities", "f_getproducts_By_getmegaoffers")]
        public virtual IQueryable<f_getproducts_By_getmegaoffers_Result> f_getproducts_By_getmegaoffers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_getproducts_By_getmegaoffers_Result>("[Entities].[f_getproducts_By_getmegaoffers]()");
        }
    
        [DbFunction("Entities", "f_getproducts_By_CategoryID")]
        public virtual IQueryable<f_getproducts_By_CategoryID_Result> f_getproducts_By_CategoryID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_getproducts_By_CategoryID_Result>("[Entities].[f_getproducts_By_CategoryID](@ID)", iDParameter);
        }
    
        [DbFunction("Entities", "f_getproducts_By_StatusID")]
        public virtual IQueryable<f_getproducts_By_StatusID_Result> f_getproducts_By_StatusID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_getproducts_By_StatusID_Result>("[Entities].[f_getproducts_By_StatusID](@ID)", iDParameter);
        }
    
        [DbFunction("Entities", "f_getproducts_By_ProductId")]
        public virtual IQueryable<f_getproducts_By_ProductId_Result> f_getproducts_By_ProductId(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_getproducts_By_ProductId_Result>("[Entities].[f_getproducts_By_ProductId](@ID)", iDParameter);
        }
    
        [DbFunction("Entities", "f_getproducts_paging")]
        public virtual IQueryable<f_getproducts_paging_Result> f_getproducts_paging(Nullable<int> numberofrows, Nullable<int> skiprecords)
        {
            var numberofrowsParameter = numberofrows.HasValue ?
                new ObjectParameter("numberofrows", numberofrows) :
                new ObjectParameter("numberofrows", typeof(int));
    
            var skiprecordsParameter = skiprecords.HasValue ?
                new ObjectParameter("skiprecords", skiprecords) :
                new ObjectParameter("skiprecords", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_getproducts_paging_Result>("[Entities].[f_getproducts_paging](@numberofrows, @skiprecords)", numberofrowsParameter, skiprecordsParameter);
        }
    
        [DbFunction("Entities", "f_getproducts_Recentlyviewed")]
        public virtual IQueryable<f_getproducts_Recentlyviewed_Result> f_getproducts_Recentlyviewed(string iP)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_getproducts_Recentlyviewed_Result>("[Entities].[f_getproducts_Recentlyviewed](@IP)", iPParameter);
        }
    
        public virtual ObjectResult<SP_Product_Paging_Result> SP_Product_Paging(string action, Nullable<int> numberofrows, Nullable<int> skiprecords, string searchurl)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var numberofrowsParameter = numberofrows.HasValue ?
                new ObjectParameter("numberofrows", numberofrows) :
                new ObjectParameter("numberofrows", typeof(int));
    
            var skiprecordsParameter = skiprecords.HasValue ?
                new ObjectParameter("skiprecords", skiprecords) :
                new ObjectParameter("skiprecords", typeof(int));
    
            var searchurlParameter = searchurl != null ?
                new ObjectParameter("searchurl", searchurl) :
                new ObjectParameter("searchurl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Product_Paging_Result>("SP_Product_Paging", actionParameter, numberofrowsParameter, skiprecordsParameter, searchurlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Product_Paging_AllRecord(string action, string searchurl)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var searchurlParameter = searchurl != null ?
                new ObjectParameter("searchurl", searchurl) :
                new ObjectParameter("searchurl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Product_Paging_AllRecord", actionParameter, searchurlParameter);
        }
    
        public virtual ObjectResult<SP_Status_HasProducts_Result> SP_Status_HasProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Status_HasProducts_Result>("SP_Status_HasProducts");
        }
    
        public virtual ObjectResult<SP_Order_Master_Result> SP_Order_Master()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Order_Master_Result>("SP_Order_Master");
        }
    
        public virtual ObjectResult<SP_Vendor_Search_Result> SP_Vendor_Search(string productname, string maincat, string subcat, string area)
        {
            var productnameParameter = productname != null ?
                new ObjectParameter("Productname", productname) :
                new ObjectParameter("Productname", typeof(string));
    
            var maincatParameter = maincat != null ?
                new ObjectParameter("maincat", maincat) :
                new ObjectParameter("maincat", typeof(string));
    
            var subcatParameter = subcat != null ?
                new ObjectParameter("subcat", subcat) :
                new ObjectParameter("subcat", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Vendor_Search_Result>("SP_Vendor_Search", productnameParameter, maincatParameter, subcatParameter, areaParameter);
        }
    
        [DbFunction("Entities", "f_order_detail")]
        public virtual IQueryable<f_order_detail_Result> f_order_detail(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_order_detail_Result>("[Entities].[f_order_detail](@ID)", iDParameter);
        }
    
        public virtual ObjectResult<SP_getorg_Result> SP_getorg()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getorg_Result>("SP_getorg");
        }
    
        public virtual ObjectResult<sp_getcat_withoutparent_Result> sp_getcat_withoutparent(Nullable<int> orgid)
        {
            var orgidParameter = orgid.HasValue ?
                new ObjectParameter("orgid", orgid) :
                new ObjectParameter("orgid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getcat_withoutparent_Result>("sp_getcat_withoutparent", orgidParameter);
        }
    }
}
